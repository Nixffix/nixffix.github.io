// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏

document.querySelector('.rkn__button').addEventListener('click', event => {

    let emptyInput = false;

    document.querySelectorAll('.rkn__media-label').forEach( (item, i) => {
        if ( item.textContent === 'üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª' ) {
            emptyInput = true;
        }
    })

    if ( document.querySelector('.rkn__input-links').value == "" || !document.querySelector('.rkn__input-links').value.includes(".") ) {
        document.querySelector('.rkn__warning').textContent = '‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ ‚ö†Ô∏è';
        
        document.querySelector('.rkn__warning').style.marginTop = '20px';
        document.querySelector('.rkn__warning').style.marginBottom = '20px';
        document.querySelector('.rkn__warning').style.padding = '10px';
        document.querySelector('.rkn__warning').style.maxHeight = '100px';
        setTimeout( () => {
            document.querySelector('.rkn__warning').style.marginTop = '0px';
            document.querySelector('.rkn__warning').style.padding = '0px';
            document.querySelector('.rkn__warning').style.maxHeight = '0px';
        }, 3000)
    } else if ( document.querySelectorAll('.rkn__input-text')[0].value == "" || document.querySelectorAll('.rkn__input-text')[0].value.length < 10 ) {
        document.querySelector('.rkn__warning').textContent = '‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∂–∞–ª–æ–±—ã ‚ö†Ô∏è';
        
        document.querySelector('.rkn__warning').style.marginTop = '20px';
        document.querySelector('.rkn__warning').style.marginBottom = '20px';
        document.querySelector('.rkn__warning').style.padding = '10px';
        document.querySelector('.rkn__warning').style.maxHeight = '100px';
        setTimeout( () => {
            document.querySelector('.rkn__warning').style.marginTop = '0px';
            document.querySelector('.rkn__warning').style.padding = '0px';
            document.querySelector('.rkn__warning').style.maxHeight = '0px';
        }, 3000)
    } else if ( emptyInput ) {
        document.querySelector('.rkn__warning').textContent = '‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ ‚ö†Ô∏è';

        document.querySelector('.rkn__warning').style.marginTop = '20px';
        document.querySelector('.rkn__warning').style.marginBottom = '20px';
        document.querySelector('.rkn__warning').style.padding = '10px';
        document.querySelector('.rkn__warning').style.maxHeight = '100px';
        setTimeout( () => {
            document.querySelector('.rkn__warning').style.marginTop = '0px';
            document.querySelector('.rkn__warning').style.padding = '0px';
            document.querySelector('.rkn__warning').style.maxHeight = '0px';
        }, 3000)
    } else {

        document.querySelector('.log').style.display = "block";
        setTimeout( () => {
            document.querySelector('.log').style.opacity = "1";
            setTimeout( () => {
                document.querySelector('.log__body').style.top = "50%";
            }, 100 )
        }, 100 )

        let newLogInPage = document.createElement("div");
        newLogInPage.classList.add("log__text");
        newLogInPage.innerHTML = `<span>${getCurrentTime()}</span><p>üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏ –∂–∞–ª–æ–± –†–ö–ù</p>`;
        document.querySelector(".log__wall").prepend(newLogInPage);

        const rawLinks = document.querySelector('.rkn__input-links').value.trim();
        const textTemplate = document.querySelector('.rkn__input-text').value.trim();

        const links = rawLinks.split("\n").map(l => l.trim()).filter(l => l.includes("."));
        const files = Array.from(document.querySelectorAll('.rkn__input-file'))
                        .map(f => f.files[0] || null);

        if (links.length === 0) {
            return addLog("‚ö†Ô∏è –ù–µ—Ç —Å—Å—ã–ª–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏");
        }
        if (!textTemplate || textTemplate.length < 10) {
            return addLog("‚ö†Ô∏è –¢–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π");
        }

        addLog(`üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏ (${links.length} —Å—Å—ã–ª–æ–∫)`);

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª
        sendReportsSequentially(0, links, textTemplate, files);

    }

})

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ / —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤

document.querySelector('.rkn__input-links').addEventListener("input", () => {
    
    const lines = document.querySelector('.rkn__input-links').value
      .split("\n")
      .map(l => l.trim())
      .filter(l => l.length > 0);
    const links = lines.filter(l => /\./.test(l));
    console.log(links.length);

    document.querySelectorAll('.rkn__area-screen').forEach( (item, i) => {
        item.remove();
    })

    links.forEach( (item, i) => {
        let newFileScreen = document.createElement('div')
        newFileScreen.classList.add('rkn__area-screen')
        newFileScreen.classList.add('rkn__area')
        newFileScreen.innerHTML = `
            <div class="rkn__label">–°–∫—Ä–∏–Ω ${item}</div>
            <label class="rkn__media-label" for="fileInput444${i}">üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª</label>
            <input type="file" name="file" accept="image/*" id="fileInput444${i}" class="rkn__input-file rkn__file" />
        `
        document.querySelector('.rkn__files').append(newFileScreen);
    })

    document.querySelectorAll('.rkn__file').forEach( (item, i) => {
        item.addEventListener('change', event => {
            const fileName = document.querySelectorAll('.rkn__media-label')[i];
            if (item.files && item.files.length > 0) {
                fileName.textContent = item.files[0].name;
            } else {
                fileName.textContent = "üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª";
            }
        })
    })

});

// === –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
function sendReportsSequentially(index, links, textTemplate, files) {
    if (index >= links.length) {
        addLog("‚úÖ –í—Å–µ –∂–∞–ª–æ–±—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã");
        return;
    }

    const link = links[index];
    const file = files[index] || null;
    const text = textTemplate.replace(/\[link\]/g, link); // –∑–∞–º–µ–Ω—è–µ–º –≤—Å–µ [link] –Ω–∞ —Ç–µ–∫—É—â—É—é —Å—Å—ã–ª–∫—É

    const formData = new FormData();
    formData.append("links", link);
    formData.append("text", text);
    if (file) formData.append("files", file);

    addLog(`‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞ –∂–∞–ª–æ–±—ã (${index+1}/${links.length}) ‚Üí ${link}`);

    fetch("/rkn-report", { method: "POST", body: formData })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                addLog(`üéØ –ñ–∞–ª–æ–±–∞ –ø–æ —Å—Å—ã–ª–∫–µ ${link} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
            } else {
                addLog(`‚ùå –û—à–∏–±–∫–∞ –ø–æ —Å—Å—ã–ª–∫–µ ${link}: ${data.error || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`);
            }
        })
        .catch(err => {
            addLog(`‚ùå –°–±–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ ${link}: ${err.message}`);
        })
        .finally(() => {
            // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            sendReportsSequentially(index + 1, links, textTemplate, files);
        });
}


// === –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ ===
function addLog(message) {
    const newLogInPage = document.createElement("div");
    newLogInPage.classList.add("log__text");
    newLogInPage.innerHTML = `<span>${getCurrentTime()}</span><p>${message}</p>`;
    document.querySelector(".log__wall").prepend(newLogInPage);
}
